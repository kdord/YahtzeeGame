{"version":3,"sources":["Die.js","Dice.js","RuleRow.js","Rules.js","ScoreTable.js","Game.js","App.js","serviceWorker.js","index.js"],"names":["Die","props","handleClick","bind","this","idx","numberWords","locked","val","rolling","disabled","classes","className","onClick","Component","defaultProps","Dice","dice","map","die","key","RuleRow","score","name","doScore","description","undefined","Rule","params","Object","assign","reduce","prev","curr","freqs","Map","d","set","get","Array","from","values","filter","length","TotalOneNumber","evalRoll","count","SumDistro","freq","some","c","sum","FullHouse","includes","SmallStraight","Set","has","LargeStraight","size","Yahtzee","ones","twos","threes","fours","fives","sixes","threeOfKind","fourOfKind","fullHouse","smallStraight","largeStraight","yahtzee","chance","ScoreTable","scores","totalScore","cellSpacing","evt","getTotalScore","NUM_DICE","NUM_ROLLS","Game","state","fill","rollsLeft","console","log","toggleLocked","roll","animateRoll","displayRollInfo","setState","setTimeout","currState","slice","Math","ceil","random","rulename","ruleFn","st","every","x","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oZAGMA,G,kBAKJ,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAEDC,YAAc,EAAKA,YAAYC,KAAjB,gBAHF,E,2EAOjBC,KAAKH,MAAMC,YAAYE,KAAKH,MAAMI,O,+BAG1B,IAAD,EACiDD,KAAKH,MAArDK,EADD,EACCA,YAAaC,EADd,EACcA,OAAQC,EADtB,EACsBA,IAAKC,EAD3B,EAC2BA,QAASC,EADpC,EACoCA,SACvCC,EAAO,0BAAsBL,EAAYE,EAAM,GAAxC,UAIX,OAHID,IAAQI,GAAW,eACnBF,IAASE,GAAW,gBAGtB,uBAAGC,UAAWD,EAASE,QAAST,KAAKF,YAAaQ,SAAUA,Q,GAtBhDI,cAAZd,EACGe,aAAe,CACpBT,YAAa,CAAC,MAAO,MAAO,QAAS,OAAQ,OAAQ,OACrDE,IAAK,GAuBMR,QCLAgB,G,uLAnBH,IAAD,OACP,OACE,yBAAKJ,UAAU,QACZR,KAAKH,MAAMgB,KAAKC,KAAI,SAACC,EAAKd,GAAN,OACnB,kBAAC,EAAD,CACEG,IAAKW,EACLZ,OAAQ,EAAKN,MAAMM,OAAOF,GAC1BA,IAAKA,EACLe,IAAKf,EACLH,YAAa,EAAKD,MAAMC,YACxBQ,SAAU,EAAKT,MAAMS,SACrBD,QAAS,EAAKR,MAAMQ,UAAY,EAAKR,MAAMM,OAAOF,a,GAZ3CS,cCeJO,G,uLAfH,IAAD,EACuCjB,KAAKH,MAA3CqB,EADD,EACCA,MAAOC,EADR,EACQA,KAAMC,EADd,EACcA,QAASC,EADvB,EACuBA,YACxBf,OAAqBgB,IAAVJ,EACjB,OACE,wBACEV,UAAS,2BAAsBF,EAAW,WAAa,UACvDG,QAASH,EAAW,KAAOc,GAE3B,wBAAIZ,UAAU,gBAAgBW,GAC9B,wBAAIX,UAAU,iBAAiBF,EAAWY,EAAQG,Q,GAVpCX,cCOhBa,G,iBACJ,WAAYC,GAAS,oBAEnBC,OAAOC,OAAO1B,KAAMwB,G,gDAGlBX,GAEF,OAAOA,EAAKc,QAAO,SAACC,EAAMC,GAAP,OAAgBD,EAAOC,O,2BAGvChB,GAEH,IAAMiB,EAAQ,IAAIC,IAFT,uBAGT,YAAclB,EAAd,oDAASmB,EAAT,QAAoBF,EAAMG,IAAID,GAAIF,EAAMI,IAAIF,IAAM,GAAK,IAH9C,kFAIT,OAAOG,MAAMC,KAAKN,EAAMO,Y,4BAGpBxB,EAAMT,GAEV,OAAOS,EAAKyB,QAAO,SAAAN,GAAC,OAAIA,IAAM5B,KAAKmC,W,MASjCC,E,2MACJC,SAAW,SAAA5B,GACT,OAAO,EAAKT,IAAM,EAAKsC,MAAM7B,EAAM,EAAKT,M,6BAFfmB,GAWvBoB,E,2MACJF,SAAW,SAAA5B,GAET,OAAO,EAAK+B,KAAK/B,GAAMgC,MAAK,SAAAC,GAAC,OAAIA,GAAK,EAAKJ,SAAS,EAAKK,IAAIlC,GAAQ,G,6BAHjDU,GASlByB,E,2MACJP,SAAW,SAAA5B,GACT,IAAM+B,EAAO,EAAKA,KAAK/B,GACvB,OAAO+B,EAAKK,SAAS,IAAML,EAAKK,SAAS,GAAK,EAAK/B,MAAQ,G,6BAHvCK,GASlB2B,E,2MACJT,SAAW,SAAA5B,GACT,IAAMmB,EAAI,IAAImB,IAAItC,GAClB,OAAImB,EAAEoB,IAAI,IAAMpB,EAAEoB,IAAI,IAAMpB,EAAEoB,IAAI,KAAOpB,EAAEoB,IAAI,IAAMpB,EAAEoB,IAAI,IAClD,EAAKlC,MAEVc,EAAEoB,IAAI,IAAMpB,EAAEoB,IAAI,IAAMpB,EAAEoB,IAAI,KAAOpB,EAAEoB,IAAI,IAAMpB,EAAEoB,IAAI,IAClD,EAAKlC,MAEP,G,6BATiBK,GAetB8B,E,2MACJZ,SAAW,SAAA5B,GACT,IAAMmB,EAAI,IAAImB,IAAItC,GAGlB,OAAkB,IAAXmB,EAAEsB,MAAgBtB,EAAEoB,IAAI,IAAOpB,EAAEoB,IAAI,GAAmB,EAAb,EAAKlC,O,6BAL/BK,GAWtBgC,E,2MACJd,SAAW,SAAA5B,GAET,OAA8B,IAAvB,EAAK+B,KAAK/B,GAAM,GAAW,EAAKK,MAAQ,G,6BAH7BK,GAQhBiC,EAAO,IAAIhB,EAAe,CAAEpC,IAAK,EAAGiB,YAAa,kBACjDoC,EAAO,IAAIjB,EAAe,CAAEpC,IAAK,EAAGiB,YAAa,kBACjDqC,EAAS,IAAIlB,EAAe,CAAEpC,IAAK,EAAGiB,YAAa,kBACnDsC,EAAQ,IAAInB,EAAe,CAAEpC,IAAK,EAAGiB,YAAa,kBAClDuC,EAAQ,IAAIpB,EAAe,CAAEpC,IAAK,EAAGiB,YAAa,kBAClDwC,EAAQ,IAAIrB,EAAe,CAAEpC,IAAK,EAAGiB,YAAa,kBAGlDyC,EAAc,IAAInB,EAAU,CAChCD,MAAO,EACPrB,YAAa,mCAET0C,EAAa,IAAIpB,EAAU,CAC/BD,MAAO,EACPrB,YAAa,mCAIT2C,EAAY,IAAIhB,EAAU,CAC9B9B,MAAO,GACPG,YAAa,+BAIT4C,EAAgB,IAAIf,EAAc,CACtChC,MAAO,GACPG,YAAa,mCAET6C,EAAgB,IAAIb,EAAc,CACtCnC,MAAO,GACPG,YAAa,mCAIT8C,EAAU,IAAIZ,EAAQ,CAC1BrC,MAAO,GACPG,YAAa,0BAIT+C,EAAS,IAAIzB,EAAU,CAAED,MAAO,EAAGrB,YAAa,iBCPvCgD,E,wLAnHI,IACPC,EAAWtE,KAAKH,MAAhByE,OACJC,EAAa,EACjB,IAAK,IAAIvD,KAAOsD,EACVA,EAAOtD,KAAMuD,GAAcD,EAAOtD,IAExC,OAAOuD,I,+BAEC,IAAD,EACqBvE,KAAKH,MAAzByE,EADD,EACCA,OAAQlD,EADT,EACSA,QAEhB,OACE,yBAAKZ,UAAU,cACb,6BAASA,UAAU,sBACjB,qCACA,2BAAOgE,YAAY,KACjB,+BACE,kBAAC,EAAD,CACErD,KAAK,OACLD,MAAOoD,EAAOd,KACdnC,YAAamC,EAAKnC,YAClBD,QAAS,SAAAqD,GAAG,OAAIrD,EAAQ,OAAQoC,EAAKf,aAEvC,kBAAC,EAAD,CACEtB,KAAK,OACLD,MAAOoD,EAAOb,KACdpC,YAAaoC,EAAKpC,YAClBD,QAAS,SAAAqD,GAAG,OAAIrD,EAAQ,OAAQqC,EAAKhB,aAEvC,kBAAC,EAAD,CACEtB,KAAK,SACLD,MAAOoD,EAAOZ,OACdrC,YAAaqC,EAAOrC,YACpBD,QAAS,SAAAqD,GAAG,OAAIrD,EAAQ,SAAUsC,EAAOjB,aAE3C,kBAAC,EAAD,CACEtB,KAAK,QACLD,MAAOoD,EAAOX,MACdtC,YAAasC,EAAMtC,YACnBD,QAAS,SAAAqD,GAAG,OAAIrD,EAAQ,QAASuC,EAAMlB,aAEzC,kBAAC,EAAD,CACEtB,KAAK,QACLD,MAAOoD,EAAOV,MACdvC,YAAauC,EAAMvC,YACnBD,QAAS,SAAAqD,GAAG,OAAIrD,EAAQ,QAASwC,EAAMnB,aAEzC,kBAAC,EAAD,CACEtB,KAAK,QACLD,MAAOoD,EAAOT,MACdxC,YAAawC,EAAMxC,YACnBD,QAAS,SAAAqD,GAAG,OAAIrD,EAAQ,QAASyC,EAAMpB,gBAK/C,6BAASjC,UAAU,+CACjB,qCACA,2BAAOgE,YAAY,KACjB,+BACE,kBAAC,EAAD,CACErD,KAAK,gBACLD,MAAOoD,EAAOR,YACdzC,YAAayC,EAAYzC,YACzBD,QAAS,SAAAqD,GAAG,OAAIrD,EAAQ,cAAe0C,EAAYrB,aAErD,kBAAC,EAAD,CACEtB,KAAK,eACLD,MAAOoD,EAAOP,WACd1C,YAAa0C,EAAW1C,YACxBD,QAAS,SAAAqD,GAAG,OAAIrD,EAAQ,aAAc2C,EAAWtB,aAEnD,kBAAC,EAAD,CACEtB,KAAK,aACLD,MAAOoD,EAAON,UACd3C,YAAa2C,EAAU3C,YACvBD,QAAS,SAAAqD,GAAG,OAAIrD,EAAQ,YAAa4C,EAAUvB,aAEjD,kBAAC,EAAD,CACEtB,KAAK,iBACLD,MAAOoD,EAAOL,cACd5C,YAAa4C,EAAc5C,YAC3BD,QAAS,SAAAqD,GAAG,OACVrD,EAAQ,gBAAiB6C,EAAcxB,aAG3C,kBAAC,EAAD,CACEtB,KAAK,iBACLD,MAAOoD,EAAOJ,cACd7C,YAAa6C,EAAc7C,YAC3BD,QAAS,SAAAqD,GAAG,OACVrD,EAAQ,gBAAiB8C,EAAczB,aAG3C,kBAAC,EAAD,CACEtB,KAAK,UACLD,MAAOoD,EAAOH,QACd9C,YAAa8C,EAAQ9C,YACrBD,QAAS,SAAAqD,GAAG,OAAIrD,EAAQ,UAAW+C,EAAQ1B,aAE7C,kBAAC,EAAD,CACEtB,KAAK,SACLD,MAAOoD,EAAOF,OACd/C,YAAa+C,EAAO/C,YACpBD,QAAS,SAAAqD,GAAG,OAAIrD,EAAQ,SAAUgD,EAAO3B,gBAKjD,4CAAkBzC,KAAK0E,sB,GA9GNhE,aCdnBiE,G,MAAW,GACXC,EAAY,EAqHHC,E,YAlHb,WAAYhF,GAAQ,IAAD,8BACjB,4CAAMA,KAEDiF,MAAQ,CACXjE,KAAMsB,MAAMC,KAAK,CAAEG,OAAQoC,IAC3BxE,OAAQgC,MAAMwC,GAAUI,MAAK,GAC7BC,UAAWJ,EACXvE,SAAS,EACTiE,OAAQ,CACNd,UAAMlC,EACNmC,UAAMnC,EACNoC,YAAQpC,EACRqC,WAAOrC,EACPsC,WAAOtC,EACPuC,WAAOvC,EACPwC,iBAAaxC,EACbyC,gBAAYzC,EACZ0C,eAAW1C,EACX2C,mBAAe3C,EACf4C,mBAAe5C,EACf6C,aAAS7C,EACT8C,YAAQ9C,IAGZ2D,QAAQC,IAAI,EAAKJ,OACjB,EAAKK,aAAe,EAAKA,aAAapF,KAAlB,gBACpB,EAAKqF,KAAO,EAAKA,KAAKrF,KAAV,gBACZ,EAAKqB,QAAU,EAAKA,QAAQrB,KAAb,gBACf,EAAKsF,YAAc,EAAKA,YAAYtF,KAAjB,gBACnB,EAAKuF,gBAAkB,EAAKA,gBAAgBvF,KAArB,gBA7BN,E,iFAiCjBC,KAAKqF,gB,oCAEQ,IAAD,OACZrF,KAAKuF,SAAS,CAAElF,SAAS,IAAQ,WAC/BmF,WAAW,EAAKJ,KAAM,U,mCAGbnF,GACXgF,QAAQC,IAAIjF,GACRD,KAAK8E,MAAME,UAAY,IAAMhF,KAAK8E,MAAMzE,SAC1CL,KAAKuF,UAAS,SAAAE,GAAS,MAAK,CAC1BtF,OAAO,GAAD,mBACDsF,EAAUtF,OAAOuF,MAAM,EAAGzF,IADzB,EAEHwF,EAAUtF,OAAOF,IAFd,YAGDwF,EAAUtF,OAAOuF,MAAMzF,EAAM,W,2BAMnCwE,GAEHzE,KAAKuF,UAAS,SAAAE,GAAS,MAAK,CAC1B5E,KAAM4E,EAAU5E,KAAKC,KAAI,SAACC,EAAKd,GAAN,OACvBwF,EAAUtF,OAAOF,GAAOc,EAAM4E,KAAKC,KAAqB,EAAhBD,KAAKE,aAE/C1F,OACEsF,EAAUT,UAAY,EAAIS,EAAUtF,OAASgC,MAAMwC,GAAUI,MAAK,GACpEC,UAAWS,EAAUT,UAAY,EACjC3E,SAAS,Q,8BAGLyF,EAAUC,GAAS,IAAD,OAExB/F,KAAKuF,UAAS,SAAAS,GAAE,MAAK,CACnB1B,OAAO,eAAM0B,EAAG1B,OAAV,eAAmBwB,EAAWC,EAAO,EAAKjB,MAAMjE,QACtDmE,UAAWJ,EACXzE,OAAQgC,MAAMwC,GAAUI,MAAK,OAE/B/E,KAAKqF,gB,wCASL,MANiB,CACf,eACA,cACA,eACA,kBAEcrF,KAAK8E,MAAME,a,+BAEnB,IAAD,EAC8ChF,KAAK8E,MAAlDjE,EADD,EACCA,KAAMV,EADP,EACOA,OAAQ6E,EADf,EACeA,UAAW3E,EAD1B,EAC0BA,QAASiE,EADnC,EACmCA,OAC1C,OACE,yBAAK9D,UAAU,QACb,4BAAQA,UAAU,eAChB,wBAAIA,UAAU,aAAd,YACA,6BAASA,UAAU,qBACjB,kBAAC,EAAD,CACEK,KAAMA,EACNV,OAAQA,EACRL,YAAaE,KAAKmF,aAClB7E,SAAwB,IAAd0E,EACV3E,QAASA,IAEX,yBAAKG,UAAU,uBACb,4BACEA,UAAU,cACVC,QAAST,KAAKqF,YACd/E,SAAUH,EAAO8F,OAAM,SAAAC,GAAC,OAAIA,MAAoB,IAAdlB,GAAmB3E,GAEpDL,KAAKsF,sBAKd,kBAAC,EAAD,CAAYlE,QAASpB,KAAKoB,QAASkD,OAAQA,S,GA7GhC5D,aCKJyF,MARf,WACE,OACE,yBAAK3F,UAAU,OACb,kBAAC,EAAD,Q,MCIc4F,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.6524cbfd.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Die.css\";\n\nclass Die extends Component {\n  static defaultProps = {\n    numberWords: [\"one\", \"two\", \"three\", \"four\", \"five\", \"six\"],\n    val: 5\n  };\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.props.handleClick(this.props.idx);\n  }\n\n  render() {\n    const { numberWords, locked, val, rolling, disabled } = this.props;\n    let classes = `Die fas fa-dice-${numberWords[val - 1]} fa-5x`;\n    if (locked) classes += \" Die-locked\";\n    if (rolling) classes += \" Die-rolling\";\n\n    return (\n      <i className={classes} onClick={this.handleClick} disabled={disabled} />\n    );\n  }\n}\nexport default Die;\n","import React, { Component } from \"react\";\nimport Die from \"./Die\";\nimport \"./Dice.css\";\n\nclass Dice extends Component {\n  render() {\n    return (\n      <div className=\"Dice\">\n        {this.props.dice.map((die, idx) => (\n          <Die\n            val={die}\n            locked={this.props.locked[idx]}\n            idx={idx}\n            key={idx}\n            handleClick={this.props.handleClick}\n            disabled={this.props.disabled}\n            rolling={this.props.rolling && !this.props.locked[idx]}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Dice;\n","import React, { Component } from \"react\";\nimport \"./RuleRow.css\";\n\nclass RuleRow extends Component {\n  render() {\n    const { score, name, doScore, description } = this.props;\n    const disabled = score !== undefined;\n    return (\n      <tr\n        className={`RuleRow  RuleRow-${disabled ? \"disabled\" : \"active\"}`}\n        onClick={disabled ? null : doScore}\n      >\n        <td className=\"RuleRow-name\">{name}</td>\n        <td className=\"RuleRow-score\">{disabled ? score : description}</td>\n      </tr>\n    );\n  }\n}\n\nexport default RuleRow;\n","/** Rule for Yahtzee scoring.\n *\n * This is an \"abstract class\"; the real rules are subclasses of these.\n * This stores all parameters passed into it as properties on the instance\n * (to simplify child classes so they don't need constructors of their own).\n *\n * It contains useful functions for summing, counting values, and counting\n * frequencies of dice. These are used by subclassed rules.\n */\n\nclass Rule {\n  constructor(params) {\n    // put all properties in params on instance\n    Object.assign(this, params);\n  }\n\n  sum(dice) {\n    // sum of all dice\n    return dice.reduce((prev, curr) => prev + curr);\n  }\n\n  freq(dice) {\n    // frequencies of dice values\n    const freqs = new Map();\n    for (let d of dice) freqs.set(d, (freqs.get(d) || 0) + 1);\n    return Array.from(freqs.values());\n  }\n\n  count(dice, val) {\n    // # times val appears in dice\n    return dice.filter(d => d === val).length;\n  }\n}\n\n/** Given a sought-for val, return sum of dice of that val.\n *\n * Used for rules like \"sum of all ones\"\n */\n\nclass TotalOneNumber extends Rule {\n  evalRoll = dice => {\n    return this.val * this.count(dice, this.val);\n  };\n}\n\n/** Given a required # of same dice, return sum of all dice.\n *\n * Used for rules like \"sum of all dice when there is a 3-of-kind\"\n */\n\nclass SumDistro extends Rule {\n  evalRoll = dice => {\n    // do any of the counts meet of exceed this distro?\n    return this.freq(dice).some(c => c >= this.count) ? this.sum(dice) : 0;\n  };\n}\n\n/** Check if full house (3-of-kind and 2-of-kind) */\n\nclass FullHouse extends Rule {\n  evalRoll = dice => {\n    const freq = this.freq(dice);\n    return freq.includes(2) && freq.includes(3) ? this.score : 0;\n  };\n}\n\n/** Check for small straights. */\n\nclass SmallStraight extends Rule {\n  evalRoll = dice => {\n    const d = new Set(dice);\n    if (d.has(2) && d.has(3) && d.has(4) && (d.has(1) || d.has(5))) {\n      return this.score;\n    }\n    if (d.has(3) && d.has(4) && d.has(5) && (d.has(2) || d.has(6))) {\n      return this.score;\n    }\n    return 0;\n  };\n}\n\n/** Check for large straights. */\n\nclass LargeStraight extends Rule {\n  evalRoll = dice => {\n    const d = new Set(dice);\n\n    // large straight must be 5 different dice & only one can be a 1 or a 6\n    return d.size === 5 && (!d.has(1) || !d.has(6)) ? this.score : 0;\n  };\n}\n\n/** Check if all dice are same. */\n\nclass Yahtzee extends Rule {\n  evalRoll = dice => {\n    // all dice must be the same\n    return this.freq(dice)[0] === 5 ? this.score : 0;\n  };\n}\n\n// ones, twos, etc score as sum of that value\nconst ones = new TotalOneNumber({ val: 1, description: \"1 point per 1\" });\nconst twos = new TotalOneNumber({ val: 2, description: \"2 point per 2\" });\nconst threes = new TotalOneNumber({ val: 3, description: \"3 point per 3\" });\nconst fours = new TotalOneNumber({ val: 4, description: \"4 point per 4\" });\nconst fives = new TotalOneNumber({ val: 5, description: \"5 point per 5\" });\nconst sixes = new TotalOneNumber({ val: 6, description: \"6 point per 6\" });\n\n// three/four of kind score as sum of all dice\nconst threeOfKind = new SumDistro({\n  count: 3,\n  description: \"Sum all dice if 3 are the same\"\n});\nconst fourOfKind = new SumDistro({\n  count: 4,\n  description: \"Sum all dice if 4 are the same\"\n});\n\n// full house scores as flat 25\nconst fullHouse = new FullHouse({\n  score: 25,\n  description: \"25 points for a full house\"\n});\n\n// small/large straights score as 30/40\nconst smallStraight = new SmallStraight({\n  score: 30,\n  description: \"30 points for a small straight\"\n});\nconst largeStraight = new LargeStraight({\n  score: 40,\n  description: \"40 points for a large straight\"\n});\n\n// yahtzee scores as 50\nconst yahtzee = new Yahtzee({\n  score: 50,\n  description: \"50 points for yahtzee\"\n});\n\n// for chance, can view as sum of all dice, requiring at least 0 of a kind\nconst chance = new SumDistro({ count: 0, description: \"Sum all dice\" });\n\nexport {\n  ones,\n  twos,\n  threes,\n  fours,\n  fives,\n  sixes,\n  threeOfKind,\n  fourOfKind,\n  fullHouse,\n  smallStraight,\n  largeStraight,\n  yahtzee,\n  chance\n};\n","import React, { Component } from \"react\";\nimport RuleRow from \"./RuleRow\";\nimport \"./ScoreTable.css\";\nimport {\n  ones,\n  twos,\n  threes,\n  fours,\n  fives,\n  sixes,\n  threeOfKind,\n  fourOfKind,\n  fullHouse,\n  smallStraight,\n  largeStraight,\n  yahtzee,\n  chance\n} from \"./Rules\";\n\nclass ScoreTable extends Component {\n  getTotalScore() {\n    const { scores } = this.props;\n    let totalScore = 0;\n    for (let key in scores) {\n      if (scores[key]) totalScore += scores[key];\n    }\n    return totalScore;\n  }\n  render() {\n    const { scores, doScore } = this.props;\n\n    return (\n      <div className=\"ScoreTable\">\n        <section className=\"ScoreTable-section\">\n          <h2>Upper</h2>\n          <table cellSpacing=\"0\">\n            <tbody>\n              <RuleRow\n                name=\"Ones\"\n                score={scores.ones}\n                description={ones.description}\n                doScore={evt => doScore(\"ones\", ones.evalRoll)}\n              />\n              <RuleRow\n                name=\"Twos\"\n                score={scores.twos}\n                description={twos.description}\n                doScore={evt => doScore(\"twos\", twos.evalRoll)}\n              />\n              <RuleRow\n                name=\"Threes\"\n                score={scores.threes}\n                description={threes.description}\n                doScore={evt => doScore(\"threes\", threes.evalRoll)}\n              />\n              <RuleRow\n                name=\"Fours\"\n                score={scores.fours}\n                description={fours.description}\n                doScore={evt => doScore(\"fours\", fours.evalRoll)}\n              />\n              <RuleRow\n                name=\"Fives\"\n                score={scores.fives}\n                description={fives.description}\n                doScore={evt => doScore(\"fives\", fives.evalRoll)}\n              />\n              <RuleRow\n                name=\"Sixes\"\n                score={scores.sixes}\n                description={sixes.description}\n                doScore={evt => doScore(\"sixes\", sixes.evalRoll)}\n              />\n            </tbody>\n          </table>\n        </section>\n        <section className=\"ScoreTable-section ScoreTable-section-lower\">\n          <h2>Lower</h2>\n          <table cellSpacing=\"0\">\n            <tbody>\n              <RuleRow\n                name=\"Three of Kind\"\n                score={scores.threeOfKind}\n                description={threeOfKind.description}\n                doScore={evt => doScore(\"threeOfKind\", threeOfKind.evalRoll)}\n              />\n              <RuleRow\n                name=\"Four of Kind\"\n                score={scores.fourOfKind}\n                description={fourOfKind.description}\n                doScore={evt => doScore(\"fourOfKind\", fourOfKind.evalRoll)}\n              />\n              <RuleRow\n                name=\"Full House\"\n                score={scores.fullHouse}\n                description={fullHouse.description}\n                doScore={evt => doScore(\"fullHouse\", fullHouse.evalRoll)}\n              />\n              <RuleRow\n                name=\"Small Straight\"\n                score={scores.smallStraight}\n                description={smallStraight.description}\n                doScore={evt =>\n                  doScore(\"smallStraight\", smallStraight.evalRoll)\n                }\n              />\n              <RuleRow\n                name=\"Large Straight\"\n                score={scores.largeStraight}\n                description={largeStraight.description}\n                doScore={evt =>\n                  doScore(\"largeStraight\", largeStraight.evalRoll)\n                }\n              />\n              <RuleRow\n                name=\"Yahtzee\"\n                score={scores.yahtzee}\n                description={yahtzee.description}\n                doScore={evt => doScore(\"yahtzee\", yahtzee.evalRoll)}\n              />\n              <RuleRow\n                name=\"Chance\"\n                score={scores.chance}\n                description={chance.description}\n                doScore={evt => doScore(\"chance\", chance.evalRoll)}\n              />\n            </tbody>\n          </table>\n        </section>\n        <h2>TOTAL SCORE: {this.getTotalScore()}</h2>\n      </div>\n    );\n  }\n}\n\nexport default ScoreTable;\n","import React, { Component } from \"react\";\nimport Dice from \"./Dice\";\nimport ScoreTable from \"./ScoreTable\";\nimport \"./Game.css\";\n\nconst NUM_DICE = 5;\nconst NUM_ROLLS = 3;\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dice: Array.from({ length: NUM_DICE }),\n      locked: Array(NUM_DICE).fill(false),\n      rollsLeft: NUM_ROLLS,\n      rolling: false,\n      scores: {\n        ones: undefined,\n        twos: undefined,\n        threes: undefined,\n        fours: undefined,\n        fives: undefined,\n        sixes: undefined,\n        threeOfKind: undefined,\n        fourOfKind: undefined,\n        fullHouse: undefined,\n        smallStraight: undefined,\n        largeStraight: undefined,\n        yahtzee: undefined,\n        chance: undefined\n      }\n    };\n    console.log(this.state);\n    this.toggleLocked = this.toggleLocked.bind(this);\n    this.roll = this.roll.bind(this);\n    this.doScore = this.doScore.bind(this);\n    this.animateRoll = this.animateRoll.bind(this);\n    this.displayRollInfo = this.displayRollInfo.bind(this);\n  }\n\n  componentDidMount() {\n    this.animateRoll();\n  }\n  animateRoll() {\n    this.setState({ rolling: true }, () => {\n      setTimeout(this.roll, 1000);\n    });\n  }\n  toggleLocked(idx) {\n    console.log(idx);\n    if (this.state.rollsLeft > 0 && !this.state.rolling) {\n      this.setState(currState => ({\n        locked: [\n          ...currState.locked.slice(0, idx),\n          !currState.locked[idx],\n          ...currState.locked.slice(idx + 1)\n        ]\n      }));\n    }\n  }\n\n  roll(evt) {\n    //roll dice whose indexes are in reroll\n    this.setState(currState => ({\n      dice: currState.dice.map((die, idx) =>\n        currState.locked[idx] ? die : Math.ceil(Math.random() * 6)\n      ),\n      locked:\n        currState.rollsLeft > 1 ? currState.locked : Array(NUM_DICE).fill(true),\n      rollsLeft: currState.rollsLeft - 1,\n      rolling: false\n    }));\n  }\n  doScore(rulename, ruleFn) {\n    // evaluate this ruleFn with the dice and score this rulename\n    this.setState(st => ({\n      scores: { ...st.scores, [rulename]: ruleFn(this.state.dice) },\n      rollsLeft: NUM_ROLLS,\n      locked: Array(NUM_DICE).fill(false)\n    }));\n    this.animateRoll();\n  }\n  displayRollInfo() {\n    const messages = [\n      \"0 Rolls Left\",\n      \"1 Roll Left\",\n      \"2 Rolls Left\",\n      \"Starting Round\"\n    ];\n    return messages[this.state.rollsLeft];\n  }\n  render() {\n    const { dice, locked, rollsLeft, rolling, scores } = this.state;\n    return (\n      <div className=\"Game\">\n        <header className=\"Game-header\">\n          <h1 className=\"App-title\">Yahtzee!</h1>\n          <section className=\"Game-dice-section\">\n            <Dice\n              dice={dice}\n              locked={locked}\n              handleClick={this.toggleLocked}\n              disabled={rollsLeft === 0}\n              rolling={rolling}\n            />\n            <div className=\"Game-button-wrapper\">\n              <button\n                className=\"Game-reroll\"\n                onClick={this.animateRoll}\n                disabled={locked.every(x => x) || rollsLeft === 0 || rolling}\n              >\n                {this.displayRollInfo()}\n              </button>\n            </div>\n          </section>\n        </header>\n        <ScoreTable doScore={this.doScore} scores={scores} />\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","import React from \"react\";\n\nimport \"./App.css\";\nimport Game from \"./Game\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"@fortawesome/fontawesome-free/css/all.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}